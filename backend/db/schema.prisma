generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Or your chosen database provider
  url      = env("DATABASE_URL") // Make sure to set this environment variable
}

enum ProductionLineStatus {
  IDLE
  RUNNING
  PAUSED
  DOWN
}

enum ProductionOrderStatus {
  PENDING
  PROGRESS
  FAILED
  DONE
}

enum MachineStatus {
  IDLE
  ACTIVE
  MAINTENANCE
  DOWN
}

enum DefectSeverity {
  LOW
  MEDIUM
  HIGH
}

enum QualityCheckStatus {
  PASS
  FAIL
}

model ProductionLine {
  id         Int                  @id @default(autoincrement())
  name       String
  identifier String               @unique @default(cuid())
  status     ProductionLineStatus @default(IDLE)
  createdAt  DateTime             @default(now())
  updatedAt  DateTime             @updatedAt

  machines         Machine[]
  productionOrders ProductionOrder[]
  materials        Material[]

  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model ProductionOrder {
  id             Int                   @id @default(autoincrement())
  identifier     String                @unique @default(cuid())
  targetQuantity Int?
  actualQuantity Int?
  startTime      DateTime
  endTime        DateTime?
  status         ProductionOrderStatus @default(PENDING)

  qualityChecks QualityCheck[]

  productionLine   ProductionLine @relation(fields: [productionLineId], references: [id])
  productionLineId Int
}

model Machine {
  id              Int           @id @default(autoincrement())
  name            String
  identifier      String        @unique
  status          MachineStatus @default(IDLE)
  utilizationRate Float?
  downtime        Float?

  logs MachineLog[]

  productionLine   ProductionLine @relation(fields: [productionLineId], references: [id])
  productionLineId Int
}

model Material {
  id Int @id @default(autoincrement())

  name  String
  stock Float
  unit  String

  productionLines ProductionLine[]
}

model Product {
  id         Int     @id @default(autoincrement())
  name       String
  identifier String  @unique @default(cuid())
  image      String?

  productionLines ProductionLine[]
}

model QualityCheck {
  id Int @id @default(autoincrement())

  inspectorName  String
  inspectionTime DateTime           @default(now())
  status         QualityCheckStatus

  defects Defect[]

  productionOrder   ProductionOrder @relation(fields: [productionOrderId], references: [id])
  productionOrderId Int
}

model Defect {
  id          Int            @id @default(autoincrement())
  type        String
  description String
  severity    DefectSeverity @default(LOW)
  timestamp   DateTime       @default(now())

  qualityCheck   QualityCheck @relation(fields: [qualityCheckId], references: [id])
  qualityCheckId Int
}

model EventLog {
  id        Int      @id @default(autoincrement())
  type      String
  message   String
  timestamp DateTime @default(now())
}

model MachineLog {
  id Int @id @default(autoincrement())

  timestamp DateTime      @default(now())
  status    MachineStatus @default(IDLE)

  machine   Machine @relation(fields: [machineId], references: [id])
  machineId Int
}
